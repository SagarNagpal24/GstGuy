{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\GstGuy\\\\client\\\\src\\\\views\\\\GSTTool.js\",\n  _s = $RefreshSig$();\nimport { bool } from \"prop-types\";\nimport React, { useState, useRef } from \"react\";\nimport \"./GSTTool.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GSTTool = () => {\n  _s();\n  const questions = [{\n    questionText: \"State in which business is Started?\",\n    answerOptions: [{\n      answerText: \"Manipur, Mizoram, Nagaland and Tripura\",\n      isCorrect: true\n    }, {\n      answerText: \"Other states\",\n      isStateM4: false\n    }]\n  }, {\n    questionText: \"What is your turnover limit?\",\n    answerOptions: [{\n      answerText: \"Upto 10 lakhs\",\n      isLimit10: true\n    }, {\n      answerText: \"Above 10 lakhs\",\n      isLimit10: false\n    }]\n  }, {\n    questionText: \"Whether Supply is within state or Outside state?\",\n    answerOptions: [{\n      answerText: \"Within State\",\n      isSupplyWithinstate: true\n    }, {\n      answerText: \"Outside State\",\n      isSupplyWithinstate: false\n    }, {\n      answerText: \"Both\",\n      issupplyBothstate: true\n    }]\n  }, {\n    questionText: \"Whether Supply of Goods or Service exclusively in?\",\n    answerOptions: [{\n      answerText: \"Non GST Supply\",\n      isnonGSTSupply: true\n    }, {\n      answerText: \"Exempt Supply/ Nil Rated Supply\",\n      isExemptSupply: true\n    }, {\n      answerText: \"Taxable\",\n      isTaxable: true\n    }, {\n      answerText: \"All of the Above\",\n      isALLtax: true\n    }]\n  }, {\n    questionText: \"Whether Supply of Service is Through E- commerce Operator Or Pay GST as E-commerce Operator?\",\n    answerOptions: [{\n      answerText: \"Yes\",\n      throughEcommerceOperator: true\n    }, {\n      answerText: \"No\",\n      throughEcommerceOperator: true\n    }]\n  }, {\n    questionText: \"Whether You are Non Resident Taxable Person Or Casual Taxable Person Or Input Service Distributor Or Agent of Another person?\",\n    answerOptions: [{\n      answerText: \"Yes\",\n      nonresidenttaxable: true\n    }, {\n      answerText: \"No\",\n      nonresidenttaxable: false\n    }]\n  }, {\n    questionText: \"Whether you are required to Deduct Tax under GST (TDS Deductor) OR Collect Tax under GST (TCS Collector)?\",\n    answerOptions: [{\n      answerText: \"Yes\",\n      TDSDeductor: true\n    }, {\n      answerText: \"No\",\n      TDSDeductor: false\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = React.useState(0);\n  const [showScore, setShowScore] = React.useState(false);\n  const [gstState, setgstState] = React.useState(\"\");\n  const [score, setScore] = React.useState(0);\n  const handleAnswerButtonClick = (isCorrect, isStateM4, isLimit10, isSupplyWithinstate, issupplyBothstate, isnonGSTSupply, isExemptSupply, isTaxable, isALLtax, throughEcommerceOperator, nonresidenttaxable, TDSDeductor) => {\n    // if (isCorrect === true) {\n    //   setScore(score + 1);\n    // }\n\n    if (isLimit10 === true) {\n      setgstState = true;\n    }\n\n    // if (isStateM4 == true && isLimit10 == true) \n    // setgstState = (true);\n\n    // else\n    // setgstState=(true);\n\n    // isStateM4,\n    // isLimit10,\n    // isSupplyWithinstate,\n    // issupplyBothstate,\n    // isnonGSTSupply,\n    // isExemptSupply,\n    // isTaxable,\n    // isALLtax,\n    // throughEcommerceOperator,\n    // nonresidenttaxable,\n    // TDSDeductor\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerButtonClick(answerOption.isCorrect, answerOption.isStateM4, answerOption.isLimit10, answerOption.isSupplyWithinstate, answerOption.issupplyBothstate, answerOption.isnonGSTSupply, answerOption.isExemptSupply, answerOption.isTaxable, answerOption.isALLtax, answerOption.throughEcommerceOperator, answerOption.nonresidenttaxable, answerOption.TDSDeductor),\n          children: answerOption.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(GSTTool, \"JTpSe9E4UYEF51kICZ+1dfH02Ao=\");\n_c = GSTTool;\nexport default GSTTool;\nvar _c;\n$RefreshReg$(_c, \"GSTTool\");","map":{"version":3,"names":["bool","React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","GSTTool","_s","questions","questionText","answerOptions","answerText","isCorrect","isStateM4","isLimit10","isSupplyWithinstate","issupplyBothstate","isnonGSTSupply","isExemptSupply","isTaxable","isALLtax","throughEcommerceOperator","nonresidenttaxable","TDSDeductor","currentQuestion","setCurrentQuestion","showScore","setShowScore","gstState","setgstState","score","setScore","handleAnswerButtonClick","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","answerOption","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/GstGuy/client/src/views/GSTTool.js"],"sourcesContent":["import { bool } from \"prop-types\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport \"./GSTTool.css\";\r\nconst GSTTool = () => {\r\n  const questions = [\r\n    {\r\n      questionText: \"State in which business is Started?\",\r\n      answerOptions: [\r\n        {\r\n          answerText: \"Manipur, Mizoram, Nagaland and Tripura\",\r\n          isCorrect: true\r\n        },\r\n        { answerText: \"Other states\", isStateM4: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"What is your turnover limit?\",\r\n      answerOptions: [\r\n        { answerText: \"Upto 10 lakhs\", isLimit10: true },\r\n        { answerText: \"Above 10 lakhs\", isLimit10: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Whether Supply is within state or Outside state?\",\r\n      answerOptions: [\r\n        {\r\n          answerText: \"Within State\",\r\n         \r\n          isSupplyWithinstate: true,\r\n        },\r\n        { answerText: \"Outside State\", isSupplyWithinstate: false },\r\n        { answerText: \"Both\", issupplyBothstate: true },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Whether Supply of Goods or Service exclusively in?\",\r\n      answerOptions: [\r\n        { answerText: \"Non GST Supply\", isnonGSTSupply: true },\r\n        { answerText: \"Exempt Supply/ Nil Rated Supply\", isExemptSupply: true },\r\n        { answerText: \"Taxable\", isTaxable: true },\r\n        { answerText: \"All of the Above\", isALLtax: true },\r\n      ],\r\n    },\r\n    {\r\n      questionText:\r\n        \"Whether Supply of Service is Through E- commerce Operator Or Pay GST as E-commerce Operator?\",\r\n      answerOptions: [\r\n        { answerText: \"Yes\", throughEcommerceOperator: true },\r\n        { answerText: \"No\", throughEcommerceOperator: true },\r\n      ],\r\n    },\r\n    {\r\n      questionText:\r\n        \"Whether You are Non Resident Taxable Person Or Casual Taxable Person Or Input Service Distributor Or Agent of Another person?\",\r\n      answerOptions: [\r\n        { answerText: \"Yes\", nonresidenttaxable: true },\r\n        { answerText: \"No\", nonresidenttaxable: false },\r\n      ],\r\n    },\r\n\r\n    {\r\n      questionText:\r\n        \"Whether you are required to Deduct Tax under GST (TDS Deductor) OR Collect Tax under GST (TCS Collector)?\",\r\n      answerOptions: [\r\n        { answerText: \"Yes\", TDSDeductor: true },\r\n        { answerText: \"No\", TDSDeductor: false },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  \r\n\r\n  const [currentQuestion, setCurrentQuestion] = React.useState(0);\r\n\r\n  const [showScore, setShowScore] = React.useState(false);\r\n  const [gstState, setgstState] = React.useState(\"\"); \r\n\r\n  const [score, setScore] = React.useState(0);\r\n  const handleAnswerButtonClick = (isCorrect,isStateM4,\r\n    isLimit10,\r\n    isSupplyWithinstate,\r\n    issupplyBothstate,\r\n    isnonGSTSupply,\r\n    isExemptSupply,\r\n    isTaxable,\r\n    isALLtax,\r\n    throughEcommerceOperator,\r\n    nonresidenttaxable,\r\n    TDSDeductor) => {\r\n    // if (isCorrect === true) {\r\n    //   setScore(score + 1);\r\n    // }\r\n\r\n    if (isLimit10 === true) {\r\n        setgstState = (true);\r\n        }\r\n\r\n     // if (isStateM4 == true && isLimit10 == true) \r\n    // setgstState = (true);\r\n    \r\n    // else\r\n    // setgstState=(true);\r\n\r\n    // isStateM4,\r\n    // isLimit10,\r\n    // isSupplyWithinstate,\r\n    // issupplyBothstate,\r\n    // isnonGSTSupply,\r\n    // isExemptSupply,\r\n    // isTaxable,\r\n    // isALLtax,\r\n    // throughEcommerceOperator,\r\n    // nonresidenttaxable,\r\n    // TDSDeductor\r\n\r\n   \r\n    \r\n\r\n   \r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showScore ? (\r\n        <div className=\"score-section\">{score}\r\n            </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <div className=\"question-count\">\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className=\"question-text\">\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <div className=\"answer-section\">\r\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n              <button\r\n                onClick={() =>\r\n                  handleAnswerButtonClick(answerOption.isCorrect,\r\n                    answerOption.isStateM4,\r\n                    answerOption.isLimit10,\r\n                    answerOption.isSupplyWithinstate,\r\n                    answerOption.issupplyBothstate,\r\n                    answerOption.isnonGSTSupply,\r\n                    answerOption.isExemptSupply,\r\n                    answerOption.isTaxable,\r\n                    answerOption.isALLtax,\r\n                    answerOption.throughEcommerceOperator,\r\n                    answerOption.nonresidenttaxable,\r\n                    answerOption.TDSDeductor\r\n                  )\r\n                }\r\n              >\r\n                {answerOption.answerText}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GSTTool;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}